import gradio as gr
from app.features import create_df_for_person
from app.model import make_prediction

def predict_bot(uid: str):
    try:
        df = create_df_for_person(uid)
        prediction, probability = make_prediction(df)
        message = (
            f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî {'–±–æ—Ç' if prediction else '–ù–ï –±–æ—Ç'} "
            f"(–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {probability:.2f})"
        )
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

with gr.Blocks(title="VK Bot Classifier") as demo:
    gr.Markdown("## ü§ñ VK Bot Classifier")
    gr.Markdown("–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö")

    with gr.Row():
        with gr.Column(scale=1):
            uid_input = gr.Textbox(
                label="üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK",
                placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, id1, durov, –∏–ª–∏ https://vk.com/durov",
                value=""
            )
            with gr.Row():
                submit_btn = gr.Button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å")
                clear_btn = gr.Button("üßπ –û—á–∏—Å—Ç–∏—Ç—å")

        with gr.Column(scale=1):
            result_output = gr.Textbox(
                label="üìä –†–µ–∑—É–ª—å—Ç–∞—Ç",
                lines=2,
                max_lines=2,
                interactive=False
            )

    submit_btn.click(fn=predict_bot, inputs=uid_input, outputs=result_output)
    clear_btn.click(fn=lambda: "", outputs=result_output)

    gr.Markdown(
        """
---
**üë®‚Äçüíª –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏:**
 
- –ì–∏–ª—å–º—É—Ç–¥–∏–Ω–æ–≤ –†–∏–Ω–∞—Ç –†–∞—à–∏—Ç–æ–≤–∏—á  
- –†—è–∑–∞–Ω–æ–≤ –í–∏–∫—Ç–æ—Ä –í–∞–¥–∏–º–æ–≤–∏—á 
- –•–æ–¥—å–∫–æ –í–ª–∞–¥–∏–º–∏—Ä –í–∞–ª–µ—Ä—å–µ–≤–∏—á 
- –ö–æ–±–µ–ª–µ–≤ –î–∞–Ω–∏–ª–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á  

üìÇ **[–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub](https://github.com/Ryazanov-Viktor/URFU_Software_Engineering_VK_Bots)**
        """
    )

if __name__ == "__main__":
    demo.launch()



